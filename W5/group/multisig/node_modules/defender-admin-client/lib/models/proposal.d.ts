import { Network } from 'defender-base-client';
export declare type Address = string;
export declare type ProposalType = 'upgrade' | 'custom' | 'pause';
export declare type ProposalFunctionInputs = (string | boolean | (string | boolean)[])[];
export interface ExternalApiCreateProposalRequest {
    contract: {
        network: Network;
        address: Address;
        name?: string;
        abi?: string;
    };
    title: string;
    description: string;
    type: ProposalType;
    metadata?: ProposalMetadata;
    via?: Address;
    viaType?: 'EOA' | 'Gnosis Safe' | 'Gnosis Multisig';
    functionInterface?: ProposalTargetFunction;
    functionInputs?: ProposalFunctionInputs;
}
export interface ProposalMetadata {
    newImplementationAddress?: Address;
    proxyAdminAddress?: Address;
    action?: 'pause' | 'unpause';
    operationType?: 'call' | 'delegateCall';
}
export interface ProposalTargetFunction {
    name?: string;
    inputs?: ProposalFunctionInputType[];
}
export interface ProposalFunctionInputType {
    name?: string;
    type: string;
    internalType?: string;
    components?: ProposalFunctionInputType[];
}
//# sourceMappingURL=proposal.d.ts.map