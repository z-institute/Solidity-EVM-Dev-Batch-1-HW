import '@openzeppelin/hardhat-upgrades/dist/type-extensions';
import { ValidationOptions } from '@openzeppelin/upgrades-core';
import { ProposalResponse } from 'defender-admin-client';
import type { ContractFactory } from 'ethers';
import { HardhatRuntimeEnvironment } from 'hardhat/types';
export declare type ProposeUpgradeFunction = (proxyAddress: string, ImplFactory: ContractFactory, opts?: ProposalOptions) => Promise<ProposalResponse>;
export interface ProposalOptions extends ValidationOptions {
    title?: string;
    description?: string;
    proxyAdmin?: string;
    multisig?: string;
    multisigType?: 'Gnosis Safe' | 'Gnosis Multisig' | 'EOA';
}
export declare function makeProposeUpgrade(hre: HardhatRuntimeEnvironment): ProposeUpgradeFunction;
//# sourceMappingURL=propose-upgrade.d.ts.map