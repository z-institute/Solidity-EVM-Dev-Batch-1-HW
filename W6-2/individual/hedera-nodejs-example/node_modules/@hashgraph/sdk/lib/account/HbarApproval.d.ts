/**
 * @namespace proto
 * @typedef {import("@hashgraph/proto").ICryptoApproval} proto.ICryptoApproval
 * @typedef {import("@hashgraph/proto").IAccountID} proto.IAccountID
 */
/**
 * @typedef {import("bignumber.js").default} BigNumber
 * @typedef {import("long")} Long
 */
export default class HbarApproval {
    /**
     * @internal
     * @param {proto.ICryptoApproval} approval
     * @returns {HbarApproval}
     */
    static _fromProtobuf(approval: proto.ICryptoApproval): HbarApproval;
    /**
     * @internal
     * @param {object} props
     * @param {AccountId} props.spenderAccountId
     * @param {Hbar} props.amount
     */
    constructor(props: {
        spenderAccountId: AccountId;
        amount: Hbar;
    });
    /**
     * The account ID of the spender of the hbar allowance.
     *
     * @readonly
     */
    readonly spenderAccountId: AccountId;
    /**
     * The amount of the spender's allowance in tinybars.
     *
     * @readonly
     */
    readonly amount: Hbar;
    /**
     * @internal
     * @returns {proto.ICryptoApproval}
     */
    _toProtobuf(): proto.ICryptoApproval;
}
export namespace proto {
    type ICryptoApproval = import("@hashgraph/proto").ICryptoApproval;
    type IAccountID = import("@hashgraph/proto").IAccountID;
}
export type BigNumber = import("bignumber.js").default;
export type Long = import("long");
import AccountId from "./AccountId.js";
import Hbar from "../Hbar.js";
